version: "3.9"
services:
  zookeeper:
    labels:
      com.docker.compose.project.license: "CC BY-NC-SA 4.0"
    image: loopitis/loopitis-repo:zookeeper-1.0.0
    container_name: zookeeper
    hostname: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - my_network
  kafka:
    labels:
      com.docker.compose.project.license: "CC BY-NC-SA 4.0"
    image: loopitis/loopitis-repo:kafka-1.0.0
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_LISTENERS= PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS= PLAINTEXT://kafka:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME= PLAINTEXT
      - KAFKA_KERBEROS_MODE=none
      - KAFKA_SASL_MECHANISM_PLAIN_REQUIRED=false
      - KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND=true
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
      - KAFKA_LOG_DIRS_RETENTION_HOURS=168
      - KAFKA_LOG_DIRS_SEGMENT_MS=604800000
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_REPLICATION_FACTOR=1
      - KAFKA_REPLICATION_FACTOR=1
      - KAFKA_KAFKACONFIG_CONFLUENT.BALANCER.TOPIC.REPLICATION.FACTOR=1
      - KAFKA_KAFKACONFIG_CONFLUENT.DURABILITY.TOPIC.REPLICATION.FACTOR=1
      - KAFKA_KAFKACONFIG_CONFLUENT.LICENSE.TOPIC.REPLICATION.FACTOR=1
      - KAFKA_KAFKACONFIG_CONFLUENT.TIER.METADATA.REPLICATION.FACTOR=1
      - KAFKA_KAFKACONFIG_TRANSACTION.STATE.LOG.REPLICATION.FACTOR=1
      - KAFKA_KAFKACONFIG_OFFSETS.TOPIC.REPLICATION.FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 # Set the transaction state log replication factor
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 # Set the transaction state log minimum in-sync replicas
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 # Set the offsets topic replication factor

    networks:
      - my_network
  consumer:
    labels:
      com.docker.compose.project.license: "CC BY-NC-SA 4.0"
    image: loopitis/loopitis-repo:consumer-1.0.0
    environment:
      cancel_request_channel: ${cancel_request_channel}
      db_max_pool_size: ${db_max_pool_size}
      topic_name_tasks: ${topic_name_tasks}
      timer_threads_in_process: ${timer_threads_in_process}
      kafka_host: ${kafka_host}
      db_port: ${db_port}
      db_user: ${db_user}
      db_password: ${db_password}
      db_host: ${db_host}
      db_name: ${db_name}
      redis_host: ${redis_host}
      redis_port: ${redis_port}
      redis_password: ${redis_password}
      redis_listeners_key: ${redis_listeners_key}
      notifications_http_version: ${notifications_http_version}
      endpoint_host: ${endpoint_host}
    hostname: consumer
    depends_on:
      - kafka
    networks:
      - my_network
  redis:
    labels:
      com.docker.compose.project.license: "CC BY-NC-SA 4.0"
    command: redis-server --requirepass ${redis_password}
    container_name: redis
    image: loopitis/loopitis-repo:redis-1.0.0
    volumes:
      - redis_data:/data
    hostname: redis
    environment:
      REDIS_PASSWORD: ${redis_password}
    networks:
      my_network:
        ipv4_address: 172.16.238.14
  postgres:
    labels:
      com.docker.compose.project.license: "CC BY-NC-SA 4.0"
    container_name: my_postgres
    image: loopitis/loopitis-repo:postgres-1.0.0
    environment:
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_password}
      POSTGRES_DB: ${db_name}
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network
    command: >
      postgres -c listen_addresses=* -c ssl=on -c ssl_cert_file=/etc/ssl/certs/certificate.crt -c ssl_key_file=/etc/ssl/private/certificate.key
  endpoints:
    labels:
      com.docker.compose.project.license: "CC BY-NC-SA 4.0"
    container_name: my_endpoint
    image: loopitis/loopitis-repo:endpoints-1.0.0
    environment:
      cancel_request_channel: ${cancel_request_channel}
      db_max_pool_size: ${db_max_pool_size}
      topic_name_tasks: ${topic_name_tasks}
      timer_threads_in_process: ${timer_threads_in_process}
      kafka_host: ${kafka_host}
      db_port: ${db_port}
      db_user: ${db_user}
      db_password: ${db_password}
      db_host: ${db_host}
      db_name: ${db_name}
      redis_host: ${redis_host}
      redis_port: ${redis_port}
      redis_password: ${redis_password}
      redis_listeners_key: ${redis_listeners_key}
      minimum_interval_time: ${minimum_interval_time}
      notifications_http_version: ${notifications_http_version}
      endpoint_host: ${endpoint_host}
    ports:
      - "8080:8080"
    networks:
      - my_network
    hostname: endpoints
networks:
  my_network:
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
volumes:
  postgres_data:
  portainer_data:
  redis_data:
